[project]
name = "striker"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
authors = [{ name = "Gijs de Jong", email = "berichtaangijs@gmail.com" }]
requires-python = ">=3.11"
dependencies = [
    "psutil>=7.0.0",
    "taichi>=1.7.3",
    "torch>=2.5.0",
    "tqdm>=4.67.1",
]

[project.scripts]
striker = "striker:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
# https://beta.ruff.rs/docs/configuration/

# target-version = "py38"  # inferred from requires-python, see https://beta.ruff.rs/docs/settings/#target-version

# Enable unsafe fixes to allow ruff to apply fixes that may change the behavior of the code.
# This is needed because otherwise ruff will not be able to trim whitespaces in (codegened) docstrings.
unsafe-fixes = true

# Allow preview lints to be enabled (like `PLW1514` to force `encoding` on open).
preview = true
# But we only want to opt-in to certain preview rules!
lint.explicit-preview-rules = true

lint.ignore = [
    # Conflicts with the formatter, as per ruff itself
    "COM812",
    "D102",
    "D103",
    "D104",
    "D203",
    "D212",
]
lint.select = [
    "A",   # Avoid shadowing built-ins
    "B",   # flake8-bugbear lints
    "COM", # Trailing-comma-related rules
    "C4",  # Comprehension-related rules
    "D",   # pydocstyle codes https://www.pydocstyle.org/en/latest/error_codes.html
    "E",   # pycodestyle error codes: https://pycodestyle.pycqa.org/en/latest/intro.html#error-codes
    # "ERA",   # eradicate dead code (WONT DO: we have lots of dead-looking code in comments)
    "F",       # Flake8 error codes https://flake8.pycqa.org/en/latest/user/error-codes.html
    "FA",      # Force from __future__ import annotations
    "I",       # Isort
    "ISC",     # Ensure implicit string concat syntax
    "TID",     # flake8-tidy-imports
    "W",       # pycodestyle warning codes: https://pycodestyle.pycqa.org/en/latest/intro.html#error-codes
    "UP",      # pyupgrade (ensures idomatic code for supported python version)
    "PIE",     # flake8-pic: various idomatic python lints
    "PLW1514", # Force setting `encoding` for open calls. This is in order to prevent issues when opening utf8 files on windows where the default encoding may depend on the active locale. https://docs.astral.sh/ruff/rules/unspecified-encoding/
    "YTT",     # Various checks on the use of `sys.version_info` and related.
]

extend-exclude = [
    ".venv",
    # generated by Gradio
    "demo/space.py",
]
line-length = 120

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.uv.sources]
taichi = { git = "https://github.com/taichi-dev/taichi" }
